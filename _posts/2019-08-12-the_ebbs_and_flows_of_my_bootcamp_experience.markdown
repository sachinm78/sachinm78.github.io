---
layout: post
title:      "The Ebbs and Flows of My Bootcamp Experience"
date:       2019-08-12 19:59:35 -0400
permalink:  the_ebbs_and_flows_of_my_bootcamp_experience
---


As I’m nearing the end of my journey into web development at Flatiron School, I find myself looking back on the experience and how quickly it has seemed to go by.  It feels like just yesterday that I quit my job in STEM education and made the commitment to learn a new trade and change my life for the better.  Back then, I didn’t really know what to expect from my decision.  Now that the program is almost complete, I can say with confidence, I made the right decision.  

I remember when I first started the program, the initial labs seemed intimidating and sometimes impossible.  I came into this program with minimal exposure to software engineering, but nearly a decade of experience in education so I have a good understanding of effective teaching practices.  Initially, I found some of the expectations for the early labs to be unrealistic.  How can someone new to this subject be expected to complete such complex labs without more information and guidance?  When I taught students to build and program their own robots or drones, I gave them very detailed instructions.  I provided examples and walked them through the process step-by-step.  When things didn’t work, I helped them troubleshoot and fix them.  After all, that’s my job as their teacher.  But I also let them make mistakes so that they could learn from them.  If they asked me a question I was confident they knew the answer to, I helped them see that they already have the information they seek.  I helped them along in their learning process, but I didn’t always give them all the answers.  So then why was I expecting Flatiron to do just that?

Part of the problem was that I was working under the assumption that I am an amateur and incapable of solving such complex problems on my own.  Sure, I can Google it, but I’m paying Flatiron so I don’t have to.  That was my first mistake.  The truth is, the world of software engineering is vast and ever-changing.  Even an expert in the field will write bad code or need to look up the answer from time-to-time.  No one has all the answers.  But each one of us has the ability to succeed if we can push ourselves when times seem tough.  

![](https://miro.medium.com/max/1400/1*HRTaU3eY_PPzzyt808UMfQ.jpeg)
*(Image source: https://miro.medium.com/max/1400/1*HRTaU3eY_PPzzyt808UMfQ.jpeg*

This was never more true than during each of the 5 project weeks.  Everything I thought I knew went out the door when it was time to build web applications on my own.  It was a week-long struggle each time.  Early in the week, I often felt lost or unsure of what I was doing, so I did what I would expect any student of mine to do when they are struggling.  I reviewed key lessons.  I practiced with walk-through project lessons from the Learn video library.  I made mistakes and learned how not to make them again.  During my first few projects, I would not have made it through the process without 1-on-1 help from Learn instructors.  I relied on them to guide me in the right direction, to show me how to troubleshoot an error, to tell me what I need to do next.  I was so grateful for their help, but I was also selling myself short.  Like most bootcamp students, I had hardcore imposter syndrome. 

It wasn’t until the last two projects where I truly started to see how much I’ve learned in a few short months.  Remember those Ruby labs I thought were impossible?  Well, I reviewed them before doing my Rails project and guess what?  They were super easy!  That shouldn’t be surprising if you’ve ever tried studying a new language.  Did you get better with practice?  I imagine so.  But what was surprising is that instead of only having to relying on others to help me figure out why my project wasn’t working the way I expected it to, I used what I had learned and observed from my instructors and on video lessons to guide me to the solution.  Was it easy?  Not at all.   Did I figure things out quickly?  Definitely not.  Did it take a toll on me?  Most certainly.  My mood fluctuated from elated when I got a feature working to deflated when a new issue arose and broke everything.  But in spite of the difficulties, the one thing from this experience that will always stick with me is that moment of pure joy when the final error was solved and the project was working to spec.   

It may have taken hours of work and countless videos, labs, blogs and Stack Overflow threads to get me to where I needed, but when I got there...WOW!  I did that.  Five months ago, there was no way in hell I could have added JS to Rails code or built an API and connected it to a front-end app.  Now I can.  Am I an expert?  By no means.  Am I an imposter?  Also a no.  Do I think I can be a capable and successful software engineer?  I’m happy to report that for the first time since I started this journey, the answer to that last question is finally...YES!

p.s.  None of this would have been possible without the support of my family and my cohort.  I'm so grateful for all their support throughout this journey.  Ninja-vis-hid 4Life.  
